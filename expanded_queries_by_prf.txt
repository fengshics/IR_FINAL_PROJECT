what articles exist which deal with tss time sharing system an operating system for ibm computers operating performance console design were text interarrival recognition input retrieval experimental analysis or can sitar word monitor multiprogramming search conversion
i am interested in articles written either by prieve or udo pooch prieve b. pooch u graph code approximation t set report analyzer information area language syntactic linear optimum edges parsing interactive or tape structure line
intermediate languages used in construction of multi-targeted compilers tcoll science grammar computer right bounded-context clu g attribute usage courses undergraduate abstractions algorithm context-free semantic gs rrp k counts register
i 'm interested in mechanisms for communicating between disjoint processes possibly but not exclusively in a distributed environment i would rather see descriptions of complete mechanisms with or without implementations as opposed to theoretical work on the abstract problem remote procedure calls and message-passing are examples of my interests graphical hashing sembegs parallel processes method perfect report we logic graphics rules systems have language can structure interference theory class
i 'd like papers on design and implementation of editing interfaces window-managers command interpreters etc the essential issues are human interface design with views on improvements to user efficiency effectiveness and satisfaction chess monitor retrieval tree editing information coko graphic language game communications typesetting system on-line searching systems text iii geometry linc
interested in articles on robotics motion planning particularly the geometric and combinatorial aspects we are not interested in the dynamics of arm motion disk legal simulation visible animation we number river language logic surface can geometric frame skeleton how image theory environmental population
i am interested in distributed algorithms concurrent programs in which processes communicate and synchronize by using message passing areas of particular interest include fault-tolerance and techniques for understanding the correctness of these algorithms network computer topology formac parallel processes report rules distributed interference computers ordering protocol information correctness data exclusion language mathematical mutual
addressing schemes for resources in networks resource addressing in network operating systems forwarding response broadcast network deadlock time addressing communication packet address path working arpanet routing reverse line scheduling design have been
security considerations in local networks network operating systems and distributed systems social information eft topology data ethernet relations packet communication services value higher communications representation transfer education computing is optimal so
parallel languages languages for parallel computation i/o zeros criteria design systems computer derivatives n cpu programming language array input overlap problem models program method real is
setl very high level languages programmers data their translation business of systems query relational structures and base one principal distributed interface automatic language the convert
portable operating systems random security number programming language system it storage of generators thoth extended generator other portable programs which access information core
code optimization for space efficiency compiler expressions disk index indexing table be by factors system factorization space a file are paper object flow optimizations factoring
find all discussions of optimal implementations of sort algorithms for database management applications routing cellular list system relational focus jump adaptive network language problems curricula query graph searching to arrays solution array committee
find all discussions of horizontal microcode optimization with special emphasis on optimization of loops and global optimization expressions picture flow high-level model parallel algorithm detection computations factorization factors e processing an analysis data variables elimination for control
find all descriptions of file handling in operating systems based on multiple processes and message passing termination well-founded process ordering supervisor storage codes working multiset class parity core such system extended design sets by program computer
optimization of intermediate and machine code compiler machines indexing level language a are by index expressions algorithms code the programs optimizations is in object pl/i automata
languages and compilers for parallel processors especially highly horizontal microcoded machines code compaction lexical grammars character subexpressions codes systems machine rrp method k translation legal equations right programming system can regular end lr
parallel algorithms file cellular zeros problems illiac n graph execution arrays data real iv fortran files record directory by processors matrix array
graph theoretic algorithms applicable to sparse matrices precedence hashing cellular information method problem as problems perfect arrays data set relations matrix functions tree solution array keyword i
computational complexity intractability class-complete reductions algorithms and efficiency precedence sorting problem in relations it convex mathematics o n upper ts values keyword poin numerical distribution logn to context-free
i am interested in hidden-line and hidden-surface algorithms for cylinders toroids spheres and cones this is a rather specialized topic in computer graphics clipping hashing against display method perfect language report structure interactive as design storage systems i society channel course sets recognition
distributed computing structures and algorithms routing data definition network information distribution matrix adaptive packet programming ethernet sorting language languages matrices values services exponential sequences communication
applied stochastic processes retrieval list database logic model repository systems we user algorithm system have theory organizations acm how interarrival can the data
performance evaluation and modelling of computer systems problem design statement time-sharing network response simulation models system model time computer-aided hybrid criteria statistical language methods analysis software is
concurrency control mechanisms in operating systems storage data clu abstractions programming access design protection can real-time scheduling constraints ordering discipline core languages program structures synchronization for
memory management aspects of operating systems data definition security information storage multics language algorithms main performance partitioning segmentation anomaly model an sharing languages time multiprogramming execution
any information on packet radio networks of particular interest are algorithms for packet routing and for dealing with changes in network topography i am not interested in the hardware used in the network data routing cellular forwarding graph adaptive broadcast topology simulation problems relations arrays simultaneous information algorithms computer events language protocol distributed
number-theoretic algorithms especially involving prime number series sieves and chinese remainder theorem complement simplification series division focus algebraic key can publicly by n complexity logn language message electronic pattern encryption recognition o
articles on text formatting systems including what you see is what you get systems examples t/nroff scribe bravo reference protection privacy database information blocks material card localities resolution typesetting files intentional format errors with logical control retrieval identification
i 'd like to find articles describing the use of singular value decomposition in digital image processing applications include finding approximations to the original image and restoring images that are subject to noise an article on the subject is h. andrews and c. patterson outer product expansions and their uses in digital image processing american mathematical andrews h. patterson c picture system grammar surface context-free g correspondence graphics government computer algorithm gs design computers local analyzer innovation models model images
i 'd like to find articles describing graph algorithms that are based on the eigenvalue decomposition or singular value decomposition of the ajacency matrix for the graph i 'm especially interested in any heuristic algorithms for graph coloring and graph isomorphism using this method cellular methods arrays search problem row solution linear graph g array keyword backtrack detection contour constraint and can programming n
articles about the sensitivity of the eigenvalue decomposition of real matrices in particular zero-one matrices i 'm especially interested in the separation of eigenspaces corresponding to distinct eigenvalues articles on the subject c. davis and w. kahn the rotation of eigenvectors by a permutation siam j. numerical analysis vol 7 no 1 1970 g. stewart error bounds for approximate invariant subspaces of closed linear operators siam j. numerical analysis. vol 8 no 4 1971 davis c. kahn w. stewart g the graph have to tridiagonal cyphers are for these linear process beale algorithms lu edges origin encoding floating-point that algorithm
currently interested in isolation of root of polynomial there is an old more recent material heindel l simulation event queries formac o a search method l n in significant number problem optimal q binary tree log root
probabilistic algorithms especially those dealing with algebraic and symbolic manipulation some examples rabiin probabilistic algorithm on finite field siam waztch probabilistic testing of polynomial identities siam rabin m algorithm program mechanics celestial languages efficiency two complexity first processor models an language functions on by factoring roundoff computations its
fast algorithm for context-free language recognition or parsing problem-reduction context-sensitive g gs natural translation x been analysis tree has sd standard-form theorem least-errors grammar derivation sentences analyzer predictive
articles describing the relationship between data types and concurrency e.g what is the type of a process when is a synchronization attempt between two processes type correct in a message-passing system is there any notion of the types of messages -- i.e any way to check that the sender of the message and the receiver are both treating the bit stream as some particular type series processes errors checking terminal aggregation systems have computers type system cyphers parallel rules database computer program communications beale interference
what is the type of a module i do n't want the entire literature on abstract data types here but i 'm not sure how to phrase this to avoid it i 'm interested in questions about how one can check that a module matches contexts in which it is used documentation errors have legal cyphers implementation logic console languages programming we program access automatic beale constraints theory axioms encoding pl
what does type compatibility mean in languages that allow programmer defined types you might want to restrict this to extensible languages that allow definition of abstract data types or programmer-supplied definitions of operators like array partitioning aggregation access exercises we logic database formal have can abstract theory system constraints it type control how design
list all articles dealing with data types in the following languages that are referenced frequently in papers on the above languages e.g catch any languages with interesting type structures that i might have missed checking correspondence type have be we logic access pl/i program values items constraints theory reference comparative can elementary list any
theory of distributed systems and databases subtopics of special interest include reliability and fault-tolerance in distributed systems atomicity distributed transactions synchronization algorithms resource allocation lower bounds and models for asynchronous parallel systems also theory of communicating processes and protocols p. box 2158 yale station new haven conn. 06520 criteria computer programming system design operating process semaphores problem working ordering project input systems data language distributed parallel allocation networks
computer performance evaluation techniques using pattern recognition and clustering la 70803 measurement procedure distributed packet pulse ethernet normalization game waveform are system spr methodology waves parsing text region communication can structural
analysis and perception of shape by humans and computers shape descriptions shape recognition by computer two-dimensional shapes measures of circularity shape matching cellular fonts editing problems pattern blocks width-at-angle width arrays graph algorithms solution understanding feature computations array property letters elimination can
texture analysis by computer digitized texture analysis texture synthesis perception of texture fourier noise surface series transform mathematics algorithm analysis regions shading picture minimal contour numerical solids image hidden texture images digitized
the use of operations research models to optimize information system performance this includes fine tuning decisions such as secondary index selection file reorganization and distributed databases base data memory system secondary repository information disk scheme banking user strategy acm elimination reorganization query direct inverted method database
the application of fuzzy subset theory to clustering and information retrieval problems this includes performance evaluation and automatic indexing considerations secondary scheduling space term automatic index tree query data connected subgraph search accuracy elimination strongly file access design method scheme
the use of bayesian decision models to optimize information retrieval system performance this includes stopping rules to determine when a user should cease scanning the output of a retrieval search input tree data sentences game system operating relations regenerative recognition simulation file search learning method grammar state set been has
the use of computer science principles e.g data structures numerical methods in generating optimization e.g linear programming algorithms this includes issues of the khachian russian ellipsoidal algorithm and complexity of such algorithms execution symbolic humanities test picture data solutions integrals codes abstract problems linear computer systems program code types improvement improper convergence
the role of information retrieval in knowledge based systems i.e. expert systems education term query model system automatic language method multiplication such accuracy gain use normal class study computer dynamic languages search
parallel processors in information retrieval file read-interlock log2 subexpressions execution associative operating m lock hardware programming algorithm to be time requires solution ordering parallel-processor merging
parallel processors and paging algorithms list read-interlock log2 subexpressions garbage execution collection m lock paging solution n programming storage steps requires can ordering parallel-processor merging
modelling and simulation in agricultural ecosystems languages traffic system river packages model digital network sample numbers cars environmental population programs hybrid for evaluation it computers experiments
mathematical induction group theory integers modulo m probability binomial coefficients binomial theorem homomorphism morphism transitivity relations relation matrix syracuse university 313 link hall syracuse n. 13210 series language precedence algorithm grammar program natural n examinations course automatic integers problems number which with as are these relations
semantics of programming languages including abstract specifications of data types denotational semantics and proofs of correctness hoare a. dijkstra e. university of massachusetts amherst ma 01003 checking data type system have can we logic access fix constraints be how abstract program implementation theory formal control axioms
anything dealing with star height of regular languages or regular expressions or regular events lexical functions processors tree data correspondence correction character grammars program string system rrp k translation right regular machine computer events
articles relation the algebraic theory of semigroups and monoids to the study of automata and regular languages lexical grammars system correction character processors processor can string rrp k we logic data right program machine have theory translation
abstracts of articles j. backus can programming be liberated from the von neumann style a functional style and its algebra of programs cacm 21 re millo r. lipton a. perlis letter to acm forum cacm 22 1979 629-630 backus j. de millo r. lipton r. perlis a output their forms style procedures storage programming combining functional row languages discussion neumann input programs program algebra systems as representation
algorithms or statistical packages for anova regression using least squares or generalized linear models system design capabilities statistical formula are of interest student 's t test wilcoxon and sign tests multivariate and univariate components can be included network distributed packet cycling determinant linear algorithm row from ethernet bezout simulation programming networks in polynomial course neural modeling reduced
dictionary construction and accessing methods for fast retrieval of words or lexical items or morphologically related information hashing or indexing methods are usually applied to english spelling or natural language problems search system processors tree planning split character lexical it analysis machine database design item automatic semantic relational string store mst
hardware and software relating to database management systems database packages back end computers special associative hardware with microcomputers attached to disk heads or things like rap relational or network codasyl or hierarchical models systems like system r ims adabas total etc graphical disk errors associative sembegs terminal languages simulation for memory packages systems a series computers users is relational storage language
information retrieval articles by gerard salton or others about clustering bibliographic coupling use of citations or co-citations the vector space model boolean search methods using inverted files feedback etc salton g tree secondary access space buckets automatic index method direct data indices design multiplication elimination processing document key combined keys query
results relating parallel complexity theory both for pram 's and uniform circuits k memory text complement division digit logic program grammars algorithm language disk retrieval assertions search y tables ordered problem this
algorithms for parallel computation and especially comparisons between parallel and sequential algorithms programming pattern cellular zeros n problems graph permutation width-at-angle language arrays nonprocedural width model recognition program control feature parallel presented
list all articles on el1 and ecl el1 may be given as el/1 i don't remember how they did it pattern graph slip width-at-angle width programming tree items names feature context expression cobol edges as problem file information system list
