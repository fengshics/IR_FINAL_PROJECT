what articles exist which deal with tss time sharing system an operating system for ibm computers console text retrieval multiprogramming center modifications were j. conversion was at recognition sitar search several users command has file online
i am interested in articles written either by prieve or udo pooch prieve b. pooch u approximation t or area code analyzer graph linear interactive program optimum syntactic parsing as system parameter display with selecting set
intermediate languages used in construction of multi-targeted compilers tcoll g attribute science clu abstractions gs x semantic evaluation usage sd standard-form predictive courses undergraduate program that counts register allocation
i 'm interested in mechanisms for communicating between disjoint processes possibly but not exclusively in a distributed environment i would rather see descriptions of complete mechanisms with or without implementations as opposed to theoretical work on the abstract problem remote procedure calls and message-passing are examples of my interests graphical sembegs hashing model report graphics parallel environment input perfect system will interactive rules systems i list facilitate group corporation
i 'd like papers on design and implementation of editing interfaces window-managers command interpreters etc the essential issues are human interface design with views on improvements to user efficiency effectiveness and satisfaction chess retrieval tree coko language information communications game systems rule iii minimal typesetting searching by evaluation control lisp define computers
interested in articles on robotics motion planning particularly the geometric and combinatorial aspects we are not interested in the dynamics of arm motion legal animation language number visible geometric frame business control surface skeleton image key sequence structure banking two-dimensional records name psychiatric
i am interested in distributed algorithms concurrent programs in which processes communicate and synchronize by using message passing areas of particular interest include fault-tolerance and techniques for understanding the correctness of these algorithms network computer topology report in parallel rules to structure properties on data partial interference will information are protocol been correctness
addressing schemes for resources in networks resource addressing in network operating systems communication forwarding broadcast packet scheduling deadlock addressing switching arpanet line overhead path routing reverse deadlocks large management not efficiency store-and-forward
security considerations in local networks network operating systems and distributed systems social in relations eft representation information network optimal file personal value transfer files should higher education allocation these user that
parallel languages languages for parallel computation i/o a n criteria derivatives design problem array zeros cpu program can procedure processing processors model time indivisible statement specifications
setl very high level languages programmers query relational their interface distributed systems algebra computing described translation line principal we some by base user approach with
portable operating systems security storage random programming data information access extended model other number computer tutorial simulation display verification such pm w. this
code optimization for space efficiency compiler disk system space table a index indexing file is pl/i optimizing level statement can be this files technique for
find all discussions of optimal implementations of sort algorithms for database management applications jump cellular algorithms curricula graph analysis interface compression adaptive committee business education solution array n algebra sequential focus level performance
find all discussions of horizontal microcode optimization with special emphasis on optimization of loops and global optimization picture expressions high-level parallel model all factorization factors procedure programs x-ray factoring subexpressions be optimal set states correctness induction principle
find all descriptions of file handling in operating systems based on multiple processes and message passing termination well-founded systems ordering that storage working multiset operating extended core use computer organization interrupt instructions dispatcher behavior multisets supervisor
optimization of intermediate and machine code level machines memory in by generation system low automata can indexing to program code all flow examples correctness proving some
languages and compilers for parallel processors especially highly horizontal microcoded machines code compaction lexical grammars character subexpressions codes rrp k each regular translation automata expressions end lr parsers handle state an ordering execution
parallel algorithms cellular problems file graph illiac execution is matrix solution structures by data iv fortran zeros scheduling times cell many serial
graph theoretic algorithms applicable to sparse matrices method hashing cellular arrays perfect information set for problem solution array presented i sets each retrieval elements data to paths
computational complexity intractability class-complete reductions algorithms and efficiency precedence to it mathematics context-free relations as by distribution values numerical which function n keyword effort branching trees binary analysis
i am interested in hidden-line and hidden-surface algorithms for cylinders toroids spheres and cones this is a rather specialized topic in computer graphics hashing perfect storage interactive channel processor sets functions recognition pattern clipping systems reduction surface teractive on-line pictorial computers crystallography x-ray
distributed computing structures and algorithms routing distribution definition network adaptive information sorting packet exponential distributed values ethernet computer design logical not quadratic algorithm sampling methods
applied stochastic processes list database logic model theory how organizations languages what machine us matrix ergodic programming algorithm has complexity simulation from we
performance evaluation and modelling of computer systems time response network simulation time-sharing hybrid statistical disciplines computing to terminal as queueing some 4.6 on at problem recovery reliability
concurrency control mechanisms in operating systems design core scheduling clu abstractions synchronization real-time discipline features interactive ordering storage system list facilitate advanced processing large protection 4.32
memory management aspects of operating systems definition data language information languages storage anomaly security multics be logical structures sharing such will design segmentation virtual dynamic translation
any information on packet radio networks of particular interest are algorithms for packet routing and for dealing with changes in network topography i am not interested in the hardware used in the network problems cellular adaptive are graph simulation solution systems arrays simultaneous events an parallel report by array processes logic language technique
number-theoretic algorithms especially involving prime number series sieves and chinese remainder theorem series simplification algebraic focus we can statistical properties be computational these manipulation powers chebyshev key ibm generator complexity logn o
articles on text formatting systems including what you see is what you get systems examples t/nroff scribe bravo errors reference typesetting localities or retrieval locality logical invariants material card files definition terms memory program identification termination analysis part
i 'd like to find articles describing the use of singular value decomposition in digital image processing applications include finding approximations to the original image and restoring images that are subject to noise an article on the subject is h. andrews and c. patterson outer product expansions and their uses in digital image processing american mathematical andrews h. patterson c system for data correspondence grammar graphics by government surface design algorithm computers local innovation context-free g computer hexagonal triangular arrays
i 'd like to find articles describing graph algorithms that are based on the eigenvalue decomposition or singular value decomposition of the ajacency matrix for the graph i 'm especially interested in any heuristic algorithms for graph coloring and graph isomorphism using this method search problem can cellular problems linear algorithms backtrack constraint solution detection contour arrays programming consistency log2n processors connected figure merit
articles about the sensitivity of the eigenvalue decomposition of real matrices in particular zero-one matrices i 'm especially interested in the separation of eigenspaces corresponding to distinct eigenvalues articles on the subject c. davis and w. kahn the rotation of eigenvectors by a permutation siam j. numerical analysis vol 7 no 1 1970 g. stewart error bounds for approximate invariant subspaces of closed linear operators siam j. numerical analysis. vol 8 no 4 1971 davis c. kahn w. stewart g have cyphers programming algorithms problem to for process beale encoding zero-one as qr 's origin bellman how line signatures signature
currently interested in isolation of root of polynomial there is an old more recent material heindel l simulation event formac a polynomial q problem use for which methods pulse clock two was records name psychiatric optimal than
probabilistic algorithms especially those dealing with algebraic and symbolic manipulation some examples rabiin probabilistic algorithm on finite field siam waztch probabilistic testing of polynomial identities siam rabin m program mechanics celestial a functions languages models efficiency to were acm automated differential language two first processor symbolic polynomial roundoff
fast algorithm for context-free language recognition or parsing grammar g analyzer gs x has grammars least-errors predictive sd standard-form in tree natural been algorithm programming machine procedures made
articles describing the relationship between data types and concurrency e.g what is the type of a process when is a synchronization attempt between two processes type correct in a message-passing system is there any notion of the types of messages -- i.e any way to check that the sender of the message and the receiver are both treating the bit stream as some particular type series terminal aggregation communications database processes computers have described cyphers these users parallel rules beale encoding system been design chebyshev
what is the type of a module i do n't want the entire literature on abstract data types here but i 'm not sure how to phrase this to avoid it i 'm interested in questions about how one can check that a module matches contexts in which it is used errors legal cyphers type are systems constraints also be implementation bank may beale encoding data have banking some business management
what does type compatibility mean in languages that allow programmer defined types you might want to restrict this to extensible languages that allow definition of abstract data types or programmer-supplied definitions of operators like array partitioning aggregation system access formal database constraints design used exercises dynamic checking type j. presented relations by into language
list all articles dealing with data types in the following languages that are referenced frequently in papers on the above languages e.g catch any languages with interesting type structures that i might have missed list correspondence data pl/i access reference items constraints comparative processing we logic have words assignment given multiword their theory sound
theory of distributed systems and databases subtopics of special interest include reliability and fault-tolerance in distributed systems atomicity distributed transactions synchronization algorithms resource allocation lower bounds and models for asynchronous parallel systems also theory of communicating processes and protocols p. box 2158 yale station new haven conn. 06520 allocation concept working set on networks hierarchy project behavior monitors scheduling data dispatcher been p. algorithm input/output resource design by
computer performance evaluation techniques using pattern recognition and clustering la 70803 measurement procedure normalization pulse waveform game can waves parsing region distributed packet methodology spr ethernet system hand with carotid graph
analysis and perception of shape by humans and computers shape descriptions shape recognition by computer two-dimensional shapes measures of circularity shape matching problems cellular graph arrays pattern blocks solution array computations elimination understanding to property require cell many n invariant loop execution
texture analysis by computer digitized texture analysis texture synthesis perception of texture fourier noise series transform digitized minimal contour image presented mathematics algorithms approximation an modeling fast polygon object numerical waveform peak
the use of operations research models to optimize information system performance this includes fine tuning decisions such as secondary index selection file reorganization and distributed databases memory repository strategy direct in user acm m. computer method scheme elimination database distribution files text principles documents disk reorganization
the application of fuzzy subset theory to clustering and information retrieval problems this includes performance evaluation and automatic indexing considerations data tree scheduling secondary this connected subgraph strongly design application programming processing school network largest space automatic search dynamic library
the use of bayesian decision models to optimize information retrieval system performance this includes stopping rules to determine when a user should cease scanning the output of a retrieval search data input information retrieval tree sentences operating relations file recognition model system representation grammar set by users base solution code
the use of computer science principles e.g data structures numerical methods in generating optimization e.g linear programming algorithms this includes issues of the khachian russian ellipsoidal algorithm and complexity of such algorithms execution test integrals solutions codes problems data humanities for improvement improper convergence language abstract generating rational integration integral polynomials automatic
the role of information retrieval in knowledge based systems i.e. expert systems term education model method multiplication gain language such accuracy performance documents based space table class expected relevant query automatic languages
parallel processors in information retrieval execution associative file hardware subexpressions parallel ordering time read-interlock parallel-processor processor memory times lock structure software executed expression arithmetic scheduling
parallel processors and paging algorithms processor subexpressions read-interlock garbage are lock storage collection log2 execution ordering was parallel-processor require list m multiprocessor paging steps executed
modelling and simulation in agricultural ecosystems languages traffic computer packages system is numbers sample comparison analysis each cars models can part users vehicle hybrid are statistical
mathematical induction group theory integers modulo m probability binomial coefficients binomial theorem homomorphism morphism transitivity relations relation matrix syracuse university 313 link hall syracuse n. 13210 series language precedence these examinations course for relations binary powers chebyshev negative described methods at symmetric problems analysis are algorithm
semantics of programming languages including abstract specifications of data types denotational semantics and proofs of correctness hoare a. dijkstra e. university of massachusetts amherst ma 01003 checking system type access constraints can description lambda correct formal by notion expression into fix derivation calculus 4.22 extension axioms
anything dealing with star height of regular languages or regular expressions or regular events functions grammars program data correspondence right programming tree rrp k correction can comparative end lr parsers human control sound real-time
articles relation the algebraic theory of semigroups and monoids to the study of automata and regular languages system lexical processors character processor correction string ph computer two first its science switching description algol regular translation a. item
abstracts of articles j. backus can programming be liberated from the von neumann style a functional style and its algebra of programs cacm 21 re millo r. lipton a. perlis letter to acm forum cacm 22 1979 629-630 backus j. de millo r. lipton r. perlis a storage output row linear procedures discussion column structures presented appreciation method input syntactic matching hierarchical parser markov manipulation availability givens
algorithms or statistical packages for anova regression using least squares or generalized linear models system design capabilities statistical formula are of interest student 's t test wilcoxon and sign tests multivariate and univariate components can be included cycling distributed packet models networks ethernet network 's storage from simulation communication system t. other determinant roundoff neural modeling number
dictionary construction and accessing methods for fast retrieval of words or lexical items or morphologically related information hashing or indexing methods are usually applied to english spelling or natural language problems search planning processors character tree item machine split problem be string state processor finite-state semantic based store mask items output
hardware and software relating to database management systems database packages back end computers special associative hardware with microcomputers attached to disk heads or things like rap relational or network codasyl or hierarchical models systems like system r ims adabas total etc graphical disk sembegs terminal computers programs for users associative input discussed environment entities extended part organization words database modular drive
information retrieval articles by gerard salton or others about clustering bibliographic coupling use of citations or co-citations the vector space model boolean search methods using inverted files feedback etc salton g combined and buckets tree record secondary this indices file inverted data multiplication directory paper keyword generalized method design by february
results relating parallel complexity theory both for pram 's and uniform circuits k digit complement problem grammars retrieval ordered values division y value lr theorem for readout binary data memory method mesh
algorithms for parallel computation and especially comparisons between parallel and sequential algorithms pattern can programming recognition width-at-angle width permutation feature control program zeros as two language nonprocedural collection exclusion cooperation garbage mutual
list all articles on el1 and ecl el1 may be given as el/1 i don't remember how they did it system structures slip items from pattern relations base constructing can readers commentators cobol computer organization multiword general data graph names
