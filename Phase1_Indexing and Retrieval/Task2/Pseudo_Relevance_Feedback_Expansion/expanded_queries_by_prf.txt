what articles exist which deal with tss time sharing system an operating system for ibm computers design were it text programs interarrival multiprogramming retrieval analysis monitor for search synchronization sitar center modifications proceeding simulation differences distribution
i am interested in articles written either by prieve or udo pooch prieve b. pooch u approximation t replacement n page report analyzer language or a evaluation interactive syntactic parsing determinant arithmetic by set system algorithms
intermediate languages used in construction of multi-targeted compilers tcoll science nonsingular neliac computer matrices courses undergraduate binary system model systems repository design fortran number performance curriculum time-sharing natural user
i 'm interested in mechanisms for communicating between disjoint processes possibly but not exclusively in a distributed environment i would rather see descriptions of complete mechanisms with or without implementations as opposed to theoretical work on the abstract problem remote procedure calls and message-passing are examples of my interests parallel have logic rules model we computer interference theory class synchronization control which languages exclusion system mutual on can states
i 'd like papers on design and implementation of editing interfaces window-managers command interpreters etc the essential issues are human interface design with views on improvements to user efficiency effectiveness and satisfaction retrieval monitor information graphic system editing circuit typesetting software on-line language systems text to geometry filing linc rule program as
interested in articles on robotics motion planning particularly the geometric and combinatorial aspects we are not interested in the dynamics of arm motion disk simulation visible animation number river logic surface legal geometric we language frame can have digital on skeleton control how
i am interested in distributed algorithms concurrent programs in which processes communicate and synchronize by using message passing areas of particular interest include fault-tolerance and techniques for understanding the correctness of these algorithms network routing adaptive topology rules computer information interference ordering buffer protocol parallel distributed exclusion programs mutual on partial data between
addressing schemes for resources in networks resource addressing in network operating systems forwarding simulation response broadcast topology time network addressing system networks design switching distributed packet routing communication scheduling address working path
security considerations in local networks network operating systems and distributed systems social design criteria verification data dynamic eft programming relations password software computing so representation ordering scheme services table value authentication
parallel languages languages for parallel computation i/o cellular zeros graph model n derivatives arrays cpu language problems algorithms control array overlap that program presented which an
setl very high level languages their programs programmers of data style functional business algebra combining translation forms are von neumann systems and one structures computing
portable operating systems random security number programming language system it storage of generators thoth extended generator other portable programs which access information core
code optimization for space efficiency compiler expressions the index flow a indexing be factorization preprocessor e factors algorithm by are can object optimizations factoring pl/i
find all discussions of optimal implementations of sort algorithms for database management applications the of a is dispersion and query relational n are database partial pass interface acyclic block to algorithms in sorting
find all discussions of horizontal microcode optimization with special emphasis on optimization of loops and global optimization algorithm flow query high-level relational detection computations trees interface binary fortran picture e for data programs invariant procedure elimination with
find all descriptions of file handling in operating systems based on multiple processes and message passing process supervisor codes storage such working parity core class virtual computer language extended system as by memory these programs multics
optimization of intermediate and machine code expressions illiac level compiler are by index indexing structures fortran factors factorization preprocessor iv language the algorithms data programs optimizations
languages and compilers for parallel processors especially highly horizontal microcoded machines code compaction cellular problems read-interlock graph illiac solution execution m lock arrays log2 computers subexpressions n with can data programming steps requires
parallel algorithms file cellular zeros problems illiac n graph execution arrays data real iv fortran files record directory by processors matrix array
graph theoretic algorithms applicable to sparse matrices ij program s precedence cellular information estimation i problems as p arrays data relations problem matrix tree frequencies solution segmentation
computational complexity intractability class-complete reductions algorithms and efficiency precedence problem relations it convex mathematics o to n upper ts logn keyword poin numerical in context-free this bound log
i am interested in hidden-line and hidden-surface algorithms for cylinders toroids spheres and cones this is a rather specialized topic in computer graphics clipping the against display of polygons as interactive algorithms design scan rotation raster channel pattern recognition about processor on-line a
distributed computing structures and algorithms network routing data information definition processes adaptive distribution topology programming ethernet packet language languages so services exponential clocks computing that
applied stochastic processes retrieval list database data system design event repository model problem and the organizations computer-communications words techniques multiplexing interarrival acm systems
performance evaluation and modelling of computer systems problem design statement query term network system retrieval response time simulation models model computer-aided hybrid is statistical language accuracy methods
concurrency control mechanisms in operating systems storage access series protection data design security core synchronization constraints ordering facility other programming extended can it computer multics eventcounts
memory management aspects of operating systems storage information multics localities algorithms main partitioning core segmentation anomaly extended model of behavior paging sharing locality system program design
any information on packet radio networks of particular interest are algorithms for packet routing and for dealing with changes in network topography i am not interested in the hardware used in the network routing cellular forwarding graph adaptive broadcast topology simulation information problems arrays solution simultaneous algorithms computer systems protocol events present arpanet
number-theoretic algorithms especially involving prime number series sieves and chinese remainder theorem the a key can is of publicly and n decryption not pseudo-random logn o message electronic encryption complexity to this
articles on text formatting systems including what you see is what you get systems examples t/nroff scribe bravo protection privacy database system blocks typesetting intentional resolution memory data retrieval english with word model semantic muse control learning information
i 'd like to find articles describing the use of singular value decomposition in digital image processing applications include finding approximations to the original image and restoring images that are subject to noise an article on the subject is h. andrews and c. patterson outer product expansions and their uses in digital image processing american mathematical andrews h. patterson c picture grammar surface context-free g algorithm gs analyzer models display computer x algorithms system synthetic standard-form hexagonal sd predictive terrain
i 'd like to find articles describing graph algorithms that are based on the eigenvalue decomposition or singular value decomposition of the ajacency matrix for the graph i 'm especially interested in any heuristic algorithms for graph coloring and graph isomorphism using this method cellular detection search methods arrays picture problems figure information merit timetable g array class-teacher keyword backtrack contour constraint preconditions tree
articles about the sensitivity of the eigenvalue decomposition of real matrices in particular zero-one matrices i 'm especially interested in the separation of eigenspaces corresponding to distinct eigenvalues articles on the subject c. davis and w. kahn the rotation of eigenvectors by a permutation siam j. numerical analysis vol 7 no 1 1970 g. stewart error bounds for approximate invariant subspaces of closed linear operators siam j. numerical analysis. vol 8 no 4 1971 davis c. kahn w. stewart g graph the tridiagonal cyphers have to that problem linear process beale origin lu band g encoding b floating-point edges fitting
currently interested in isolation of root of polynomial there is an old more recent material heindel l simulation event queries formac o a search method l n in significant number problem optimal q binary tree log root
probabilistic algorithms especially those dealing with algebraic and symbolic manipulation some examples rabiin probabilistic algorithm on finite field siam waztch probabilistic testing of polynomial identities siam rabin m algorithm program mechanics celestial languages efficiency two complexity first processor models an language functions on by factoring roundoff computations its
fast algorithm for context-free language recognition or parsing k bounded-context t lr analyzer gs translation processor g problem automata natural x tree pushdown parser processors sd standard-form predictive
articles describing the relationship between data types and concurrency e.g what is the type of a process when is a synchronization attempt between two processes type correct in a message-passing system is there any notion of the types of messages -- i.e any way to check that the sender of the message and the receiver are both treating the bit stream as some particular type terminal checking aggregation system access computers cyphers database computer abstract have program lambda file data list names beale constraints encoding
what is the type of a module i do n't want the entire literature on abstract data types here but i 'm not sure how to phrase this to avoid it i 'm interested in questions about how one can check that a module matches contexts in which it is used documentation clu we logic system have implementation abstract access theory abstractions segments constraints pl languages data formal program on programming
what does type compatibility mean in languages that allow programmer defined types you might want to restrict this to extensible languages that allow definition of abstract data types or programmer-supplied definitions of operators like array partitioning checking system have aggregation can type access we logic database theory formal constraints program it control how design
list all articles dealing with data types in the following languages that are referenced frequently in papers on the above languages e.g catch any languages with interesting type structures that i might have missed array plots partitioning checking system correspondence aggregation software type access user database can control or mesa subplots constraints comparative independent
theory of distributed systems and databases subtopics of special interest include reliability and fault-tolerance in distributed systems atomicity distributed transactions synchronization algorithms resource allocation lower bounds and models for asynchronous parallel systems also theory of communicating processes and protocols p. box 2158 yale station new haven conn. 06520 criteria computer programming system design operating process semaphores problem working ordering project input systems data language distributed parallel allocation networks
computer performance evaluation techniques using pattern recognition and clustering la 70803 program characteristics programmer measurement time development programming models system methodology simulation design statistical hybrid are model software methods as language
analysis and perception of shape by humans and computers shape descriptions shape recognition by computer two-dimensional shapes measures of circularity shape matching method problem fonts gamma random search proposed when variables than methods detection contour suggested property solids edge letters in 's
texture analysis by computer digitized texture analysis texture synthesis perception of texture noise surface raster regions shading mathematics numerical solids picture by analysis hidden texture line algorithm method display with algorithms digital
the use of operations research models to optimize information system performance this includes fine tuning decisions such as secondary index selection file reorganization and distributed databases base methods system transformation model record secondary data repository disk scheme strategy user acm elimination hashing reorganization query inverted computer
the application of fuzzy subset theory to clustering and information retrieval problems this includes performance evaluation and automatic indexing considerations secondary scheduling space term automatic index tree query data connected subgraph search accuracy elimination strongly file access design method scheme
the use of bayesian decision models to optimize information retrieval system performance this includes stopping rules to determine when a user should cease scanning the output of a retrieval search input tree data sentences game system operating relations regenerative recognition simulation file search learning method grammar state set been has
the use of computer science principles e.g data structures numerical methods in generating optimization e.g linear programming algorithms this includes issues of the khachian russian ellipsoidal algorithm and complexity of such algorithms picture nonlinear solutions codes test problems program from been approximation are number have algorithm primal-dual inversion generation minimax processing zero-one
the role of information retrieval in knowledge based systems i.e. expert systems term query model automatic language method multiplication accuracy communication gain system data document this normal computer evaluation use processing file
parallel processors in information retrieval file read-interlock log2 subexpressions execution associative operating m lock hardware programming algorithm to be time requires solution ordering parallel-processor merging
parallel processors and paging algorithms list read-interlock log2 subexpressions garbage execution collection m lock paging solution n programming storage steps requires can ordering parallel-processor merging
modelling and simulation in agricultural ecosystems languages traffic system river packages model digital network sample numbers cars environmental population programs hybrid for evaluation it computers experiments
mathematical induction group theory integers modulo m probability binomial coefficients binomial theorem homomorphism morphism transitivity relations relation matrix syracuse university 313 link hall syracuse n. 13210 series language precedence algorithm grammar program natural n examinations course automatic integers problems number which with as are these relations
semantics of programming languages including abstract specifications of data types denotational semantics and proofs of correctness hoare a. dijkstra e. university of massachusetts amherst ma 01003 checking data type system have can we logic access fix constraints be how abstract program implementation theory formal control axioms
anything dealing with star height of regular languages or regular expressions or regular events lexical functions processors tree data correspondence correction character grammars program string system rrp k translation right regular machine computer events
articles relation the algebraic theory of semigroups and monoids to the study of automata and regular languages lexical grammars system correction character processors processor can string rrp k we logic data right program machine have theory translation
abstracts of articles j. backus can programming be liberated from the von neumann style a functional style and its algebra of programs cacm 21 re millo r. lipton a. perlis letter to acm forum cacm 22 1979 629-630 backus j. de millo r. lipton r. perlis a output their forms style storage procedures programming approximation combining algebra languages neumann abstract input data functional representation structured von real
algorithms or statistical packages for anova regression using least squares or generalized linear models system design capabilities statistical formula are of interest student 's t test wilcoxon and sign tests multivariate and univariate components can be included determinant row polynomial bezout or 's linear algorithms algorithm models reduced column storage as two programming are number by roundoff
dictionary construction and accessing methods for fast retrieval of words or lexical items or morphologically related information hashing or indexing methods are usually applied to english spelling or natural language problems search method hashing tree analysis split system perfect database communication natural semantic mst store trees relational i mask easy functions
hardware and software relating to database management systems database packages back end computers special associative hardware with microcomputers attached to disk heads or things like rap relational or network codasyl or hierarchical models systems like system r ims adabas total etc graphical errors associative sembegs statement relational query design memory problem series graphics systems language be storage interface computer-aided hardware performance
information retrieval articles by gerard salton or others about clustering bibliographic coupling use of citations or co-citations the vector space model boolean search methods using inverted files feedback etc salton g data tree space combined repository automatic method access indices multiplication record file system indexing search direct design normal user acm
results relating parallel complexity theory both for pram 's and uniform circuits text cellular language logic program memory problems graph algorithm search derivatives tables arrays detection patterns assertions algorithms array computers solution
algorithms for parallel computation and especially comparisons between parallel and sequential algorithms clipping i/o file cellular zeros against n graph illiac problems execution cpu arrays as data iv fortran real overlap files
list all articles on el1 and ecl el1 may be given as el/1 i don't remember how they did it cosine graph transformation pattern data errors programming quadrature slip width-at-angle width types list problem with feature evaluation r. clenshaw-curtis determinant
