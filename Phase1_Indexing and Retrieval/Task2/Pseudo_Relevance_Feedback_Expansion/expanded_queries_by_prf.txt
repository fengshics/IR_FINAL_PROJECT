what articles exist which deal with tss time sharing system an operating system for ibm computers text interarrival design search monitor multiprogramming experimental sitar center modifications
i am interested in articles written either by prieve or udo pooch prieve b. pooch u replacement language report page algorithms structure of set markov memory
intermediate languages used in construction of multi-targeted compilers tcoll science neliac nonsingular computer matrices courses undergraduate binary number compiler
i 'm interested in mechanisms for communicating between disjoint processes possibly but not exclusively in a distributed environment i would rather see descriptions of complete mechanisms with or without implementations as opposed to theoretical work on the abstract problem remote procedure calls and message-passing are examples of my interests have parallel we logic rules interference theory class synchronization can
i 'd like papers on design and implementation of editing interfaces window-managers command interpreters etc the essential issues are human interface design with views on improvements to user efficiency effectiveness and satisfaction retrieval monitor graphic information editing filing linc rules rule data
interested in articles on robotics motion planning particularly the geometric and combinatorial aspects we are not interested in the dynamics of arm motion disk visible can language number logic surface in how theory
i am interested in distributed algorithms concurrent programs in which processes communicate and synchronize by using message passing areas of particular interest include fault-tolerance and techniques for understanding the correctness of these algorithms network topology computer protocol data on ordering properties distributed concept
addressing schemes for resources in networks resource addressing in network operating systems forwarding response broadcast time packet system networks design address path
security considerations in local networks network operating systems and distributed systems social eft so ordering services synchronization value communications transfer information
parallel languages languages for parallel computation i/o zeros derivatives cpu overlap language models the method illiac
setl very high level languages programmers their of business translation data principal one the in
portable operating systems random number operating language generator generators thoth programs security system
code optimization for space efficiency expressions compiler a the factorization factors be are factoring level
find all discussions of optimal implementations of sort algorithms for database management applications dispersion query relational interface acyclic n the database nodes optimum
find all discussions of horizontal microcode optimization with special emphasis on optimization of loops and global optimization high-level algorithm e computations invariant execution procedure function loop collection
find all descriptions of file handling in operating systems based on multiple processes and message passing codes supervisor process parity working hierarchy correcting detecting decentralized dispatcher
optimization of intermediate and machine code by indexing the algorithms is expressions index matrix symbolic zero-one
languages and compilers for parallel processors especially highly horizontal microcoded machines code compaction be computers subexpressions log2 m steps merging m/p ordering can
parallel algorithms zeros real n processors by polynomial log2n connected model sorting
graph theoretic algorithms applicable to sparse matrices precedence as information data retrieval relations steps programming o number
computational complexity intractability class-complete reductions algorithms and efficiency convex n ts poin keyword problem selection hulls sorting upper
i am interested in hidden-line and hidden-surface algorithms for cylinders toroids spheres and cones this is a rather specialized topic in computer graphics clipping against rotation pattern recognition about polygons as crystallography new
distributed computing structures and algorithms packet distribution information programming ethernet communications communication services that exponential
applied stochastic processes the list database data retrieval repository model to interarrival acm
performance evaluation and modelling of computer systems problem statement design simulation hybrid computer-aided statistical models analysis model
concurrency control mechanisms in operating systems storage data constraints core protection design can access representation languages
memory management aspects of operating systems information multics segmentation multiprogramming sharing main contention page-on-demand resource task
any information on packet radio networks of particular interest are algorithms for packet routing and for dealing with changes in network topography i am not interested in the hardware used in the network cellular forwarding problems graph information adaptive broadcast topology arrays solution
number-theoretic algorithms especially involving prime number series sieves and chinese remainder theorem the a key can of publicly is decryption not logn
articles on text formatting systems including what you see is what you get systems examples t/nroff scribe bravo blocks typesetting its sentences learning english word with system this
i 'd like to find articles describing the use of singular value decomposition in digital image processing applications include finding approximations to the original image and restoring images that are subject to noise an article on the subject is h. andrews and c. patterson outer product expansions and their uses in digital image processing american mathematical andrews h. patterson c picture surface models synthetic system terrain computer using holography holograms
i 'd like to find articles describing graph algorithms that are based on the eigenvalue decomposition or singular value decomposition of the ajacency matrix for the graph i 'm especially interested in any heuristic algorithms for graph coloring and graph isomorphism using this method methods problem can g keyword detection contour search with exact
articles about the sensitivity of the eigenvalue decomposition of real matrices in particular zero-one matrices i 'm especially interested in the separation of eigenspaces corresponding to distinct eigenvalues articles on the subject c. davis and w. kahn the rotation of eigenvectors by a permutation siam j. numerical analysis vol 7 no 1 1970 g. stewart error bounds for approximate invariant subspaces of closed linear operators siam j. numerical analysis. vol 8 no 4 1971 davis c. kahn w. stewart g graph problem origin lu band g b generalized floating-point edges
currently interested in isolation of root of polynomial there is an old more recent material heindel l queries o n a search polynomial log binary tree are
probabilistic algorithms especially those dealing with algebraic and symbolic manipulation some examples rabiin probabilistic algorithm on finite field siam waztch probabilistic testing of polynomial identities siam rabin m program algorithm languages efficiency language first processor two complexity an
fast algorithm for context-free language recognition or parsing g bounded-context gs x natural standard-form predictive compiler sd analyzer
articles describing the relationship between data types and concurrency e.g what is the type of a process when is a synchronization attempt between two processes type correct in a message-passing system is there any notion of the types of messages -- i.e any way to check that the sender of the message and the receiver are both treating the bit stream as some particular type have aggregation checking program access cyphers database process beale constraints
what is the type of a module i do n't want the entire literature on abstract data types here but i 'm not sure how to phrase this to avoid it i 'm interested in questions about how one can check that a module matches contexts in which it is used access we logic constraints theory axioms have implementation in what
what does type compatibility mean in languages that allow programmer defined types you might want to restrict this to extensible languages that allow definition of abstract data types or programmer-supplied definitions of operators like have aggregation can access database we logic constraints theory design
list all articles dealing with data types in the following languages that are referenced frequently in papers on the above languages e.g catch any languages with interesting type structures that i might have missed partitioning array checking program access constraints mesa notation set correct
theory of distributed systems and databases subtopics of special interest include reliability and fault-tolerance in distributed systems atomicity distributed transactions synchronization algorithms resource allocation lower bounds and models for asynchronous parallel systems also theory of communicating processes and protocols p. box 2158 yale station new haven conn. 06520 criteria programming computer working ordering project input semaphores design large
computer performance evaluation techniques using pattern recognition and clustering la 70803 measurement design hybrid models methodology proposed language software service external
analysis and perception of shape by humans and computers shape descriptions shape recognition by computer two-dimensional shapes measures of circularity shape matching fonts method solids proposed letters syntactic gamma representation been surface
texture analysis by computer digitized texture analysis texture synthesis perception of texture solids surface regions shading picture mapping representation object patch teractive
the use of operations research models to optimize information system performance this includes fine tuning decisions such as secondary index selection file reorganization and distributed databases base computer data disk inverted strategy reorganization networks space system
the application of fuzzy subset theory to clustering and information retrieval problems this includes performance evaluation and automatic indexing considerations tree term space data query design accuracy indexing search direct
the use of bayesian decision models to optimize information retrieval system performance this includes stopping rules to determine when a user should cease scanning the output of a retrieval search tree game data regenerative information retrieval method machine state been
the use of computer science principles e.g data structures numerical methods in generating optimization e.g linear programming algorithms this includes issues of the khachian russian ellipsoidal algorithm and complexity of such algorithms approximation nonlinear is been to inversion primal-dual minimax have numerical
the role of information retrieval in knowledge based systems i.e. expert systems term system model use language accuracy query to automatic dynamic
parallel processors in information retrieval file log2 operating m files steps merging other directory m/p
parallel processors and paging algorithms log2 garbage list execution collection m processor m/p merging storage
modelling and simulation in agricultural ecosystems traffic system river digital cars population environmental hybrid models deterministic
mathematical induction group theory integers modulo m probability binomial coefficients binomial theorem homomorphism morphism transitivity relations relation matrix syracuse university 313 link hall syracuse n. 13210 precedence relations algorithm course automatic integers examinations these problems number
semantics of programming languages including abstract specifications of data types denotational semantics and proofs of correctness hoare a. dijkstra e. university of massachusetts amherst ma 01003 to have we logic theory axioms type how implementation on
anything dealing with star height of regular languages or regular expressions or regular events lexical grammars processors correction character right system rrp k machine
articles relation the algebraic theory of semigroups and monoids to the study of automata and regular languages system lexical processors grammars correction character rrp k translation we
abstracts of articles j. backus can programming be liberated from the von neumann style a functional style and its algebra of programs cacm 21 re millo r. lipton a. perlis letter to acm forum cacm 22 1979 629-630 backus j. de millo r. lipton r. perlis a output their programming forms combining programs style procedures algebra languages
algorithms or statistical packages for anova regression using least squares or generalized linear models system design capabilities statistical formula are of interest student 's t test wilcoxon and sign tests multivariate and univariate components can be included storage primal-dual roundoff n number linear models variables problems primal-simplex
dictionary construction and accessing methods for fast retrieval of words or lexical items or morphologically related information hashing or indexing methods are usually applied to english spelling or natural language problems tree search split analysis item store trees binary mst mask
hardware and software relating to database management systems database packages back end computers special associative hardware with microcomputers attached to disk heads or things like rap relational or network codasyl or hierarchical models systems like system r ims adabas total etc graphical sembegs statement problem series graphics relational computer-aided language design
information retrieval articles by gerard salton or others about clustering bibliographic coupling use of citations or co-citations the vector space model boolean search methods using inverted files feedback etc salton g tree space data file design record directory to indexing dynamic
results relating parallel complexity theory both for pram 's and uniform circuits cellular logic tables arrays patterns graph problems solution shrinking array
algorithms for parallel computation and especially comparisons between parallel and sequential algorithms cellular zeros problems graph execution n real arrays polynomial cell
list all articles on el1 and ecl el1 may be given as el/1 i don't remember how they did it graph data types cobol edges as problem teaching today bellman
